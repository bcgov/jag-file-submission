<wsdl:definitions name="FilingStatusFacade" targetNamespace="http://status.filing.csows.ag.gov.bc.ca/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://status.filing.csows.ag.gov.bc.ca/" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <wsdl:types>
        <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://status.filing.csows.ag.gov.bc.ca/" xmlns:tns="http://status.filing.csows.ag.gov.bc.ca/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <xs:element name="findAllParticipatingProcessingClasses" type="tns:findAllParticipatingProcessingClasses"/>
            <xs:element name="findAllParticipatingProcessingClassesResponse" type="tns:findAllParticipatingProcessingClassesResponse"/>
            <xs:element name="findAuthPackageParties" type="tns:findAuthPackageParties"/>
            <xs:element name="findAuthPackagePartiesResponse" type="tns:findAuthPackagePartiesResponse"/>
            <xs:element name="findDocumentDomainRuleVaules" type="tns:findDocumentDomainRuleVaules"/>
            <xs:element name="findDocumentDomainRuleVaulesResponse" type="tns:findDocumentDomainRuleVaulesResponse"/>
            <xs:element name="findParticipatingClass" type="tns:findParticipatingClass"/>
            <xs:element name="findParticipatingClassResponse" type="tns:findParticipatingClassResponse"/>
            <xs:element name="findParticipatingLocations" type="tns:findParticipatingLocations"/>
            <xs:element name="findParticipatingLocationsResponse" type="tns:findParticipatingLocationsResponse"/>
            <xs:element name="findStatusByClientId" type="tns:findStatusByClientId"/>
            <xs:element name="findStatusByClientIdResponse" type="tns:findStatusByClientIdResponse"/>
            <xs:element name="findStatusBySearchCriteria" type="tns:findStatusBySearchCriteria"/>
            <xs:element name="findStatusBySearchCriteriaResponse" type="tns:findStatusBySearchCriteriaResponse"/>
            <xs:element name="getBailiffs" type="tns:getBailiffs"/>
            <xs:element name="getBailiffsResponse" type="tns:getBailiffsResponse"/>
            <xs:element name="getDocumentStatusTypes" type="tns:getDocumentStatusTypes"/>
            <xs:element name="getDocumentStatusTypesResponse" type="tns:getDocumentStatusTypesResponse"/>
            <xs:element name="getDocumentTypes" type="tns:getDocumentTypes"/>
            <xs:element name="getDocumentTypesResponse" type="tns:getDocumentTypesResponse"/>
            <xs:element name="getIssueTypes" type="tns:getIssueTypes"/>
            <xs:element name="getIssueTypesResponse" type="tns:getIssueTypesResponse"/>
            <xs:element name="getPackageId" type="tns:getPackageId"/>
            <xs:element name="getPackageIdResponse" type="tns:getPackageIdResponse"/>
            <xs:element name="getPackagePrivileges" type="tns:getPackagePrivileges"/>
            <xs:element name="getPackagePrivilegesResponse" type="tns:getPackagePrivilegesResponse"/>
            <xs:element name="hasRegistryNotice" type="tns:hasRegistryNotice"/>
            <xs:element name="hasRegistryNoticeResponse" type="tns:hasRegistryNoticeResponse"/>
            <xs:element name="hasThePackagePrivilege" type="tns:hasThePackagePrivilege"/>
            <xs:element name="hasThePackagePrivilegeResponse" type="tns:hasThePackagePrivilegeResponse"/>
            <xs:element name="isParticipatingClass" type="tns:isParticipatingClass"/>
            <xs:element name="isParticipatingClassResponse" type="tns:isParticipatingClassResponse"/>
            <xs:complexType name="findAllParticipatingProcessingClasses">
                <xs:sequence/>
            </xs:complexType>
            <xs:complexType name="findAllParticipatingProcessingClassesResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:participatingClass"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="participatingClass">
                <xs:sequence>
                    <xs:element minOccurs="0" name="agenId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="courtClassCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="courtDivisionCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="courtLevelCd" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="hasThePackagePrivilege">
                <xs:sequence>
                    <xs:element minOccurs="0" name="arg0" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="arg1" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="arg2" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="hasThePackagePrivilegeResponse">
                <xs:sequence>
                    <xs:element name="return" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="findDocumentDomainRuleVaules">
                <xs:sequence>
                    <xs:element minOccurs="0" name="arg0" type="xs:string"/>
                    <xs:element minOccurs="0" name="arg1" type="xs:string"/>
                    <xs:element minOccurs="0" name="arg2" type="xs:string"/>
                    <xs:element minOccurs="0" name="arg3" type="xs:string"/>
                    <xs:element minOccurs="0" name="arg4" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="findDocumentDomainRuleVaulesResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:documentDomainRuleValue"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="documentDomainRuleValue">
                <xs:sequence>
                    <xs:element minOccurs="0" name="courtClassCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="courtDivisionCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="courtlevelCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="documentJurisdictionRuleId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="documentTypeCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="domainCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="domainDsc" type="xs:string"/>
                    <xs:element minOccurs="0" name="domainValueId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="valueCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="valueDsc" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getIssueTypes">
                <xs:sequence/>
            </xs:complexType>
            <xs:complexType name="getIssueTypesResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:codeValue"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="codeValue">
                <xs:sequence>
                    <xs:element name="active" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="code" type="xs:string"/>
                    <xs:element minOccurs="0" name="codeType" type="xs:string"/>
                    <xs:element minOccurs="0" name="description" type="xs:string"/>
                    <xs:element minOccurs="0" name="parentCode" type="xs:string"/>
                    <xs:element minOccurs="0" name="shortDescription" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="findParticipatingLocations">
                <xs:sequence/>
            </xs:complexType>
            <xs:complexType name="findParticipatingLocationsResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:decimal"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getDocumentTypes">
                <xs:sequence>
                    <xs:element minOccurs="0" name="arg0" type="xs:string"/>
                    <xs:element minOccurs="0" name="arg1" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getDocumentTypesResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:documentType"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="documentType">
                <xs:sequence>
                    <xs:element minOccurs="0" name="defaultStatutoryFee" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="documentTypeCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="documentTypeDesc" type="xs:string"/>
                    <xs:element minOccurs="0" name="initiatingYn" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="orderDocumentYn" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getPackageId">
                <xs:sequence>
                    <xs:element minOccurs="0" name="arg0" type="xs:decimal"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getPackageIdResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="xs:decimal"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getBailiffs">
                <xs:sequence/>
            </xs:complexType>
            <xs:complexType name="getBailiffsResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:bailiff"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="bailiff">
                <xs:sequence>
                    <xs:element minOccurs="0" name="bailiffId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="bailiffNm" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getPackagePrivileges">
                <xs:sequence/>
            </xs:complexType>
            <xs:complexType name="getPackagePrivilegesResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:codeValue"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="isParticipatingClass">
                <xs:sequence>
                    <xs:element minOccurs="0" name="arg0" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="arg1" type="xs:string"/>
                    <xs:element minOccurs="0" name="arg2" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="isParticipatingClassResponse">
                <xs:sequence>
                    <xs:element name="return" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="findAuthPackageParties">
                <xs:sequence>
                    <xs:element minOccurs="0" name="arg0" type="xs:decimal"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="findAuthPackagePartiesResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:authorizingPackageParty"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="authorizingPackageParty">
                <xs:sequence>
                    <xs:element minOccurs="0" name="accessRequestId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="authorizingPartySeqNo" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="ceisPartyId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="ceisPhysicalFileId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="ceisRoleTypeCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="displayName" type="xs:string"/>
                    <xs:element minOccurs="0" name="entDtm" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="entUserId" type="xs:string"/>
                    <xs:element minOccurs="0" name="partyId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="roleDesc" type="xs:string"/>
                    <xs:element minOccurs="0" name="updDtm" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="updUserId" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="findParticipatingClass">
                <xs:sequence>
                    <xs:element minOccurs="0" name="arg0" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="arg1" type="xs:string"/>
                    <xs:element minOccurs="0" name="arg2" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="findParticipatingClassResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:participatingClass"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="getDocumentStatusTypes">
                <xs:sequence/>
            </xs:complexType>
            <xs:complexType name="getDocumentStatusTypesResponse">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:codeValue"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="findStatusByClientId">
                <xs:sequence>
                    <xs:element minOccurs="0" name="arg0" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="arg1" type="xs:dateTime"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="findStatusByClientIdResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:filingStatus"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="filingStatus">
                <xs:sequence>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="filePackages" nillable="true" type="tns:filePackage"/>
                    <xs:element minOccurs="0" name="recordsFrom" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="recordsTo" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="totalRecords" type="xs:decimal"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="filePackage">
                <xs:sequence>
                    <xs:element minOccurs="0" name="clientFileNo" type="xs:string"/>
                    <xs:element minOccurs="0" name="courtClassCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="courtFileNo" type="xs:string"/>
                    <xs:element minOccurs="0" name="courtLevelCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="courtLocationCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="courtLocationId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="courtLocationName" type="xs:string"/>
                    <xs:element minOccurs="0" name="existingCourtFileYN" type="xs:boolean"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="files" nillable="true" type="tns:file"/>
                    <xs:element minOccurs="0" name="filingCommentsTxt" type="xs:string"/>
                    <xs:element minOccurs="0" name="firstName" type="xs:string"/>
                    <xs:element minOccurs="0" name="hasChecklist" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="hasRegistryNotice" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="lastName" type="xs:string"/>
                    <xs:element minOccurs="0" name="packageNo" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="packageRequests" nillable="true" type="tns:packageRequests"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="parties" nillable="true" type="tns:packageParties"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="payments" nillable="true" type="tns:packagePayments"/>
                    <xs:element minOccurs="0" name="procRequest" type="tns:rushOrderRequest"/>
                    <xs:element minOccurs="0" name="submittedDate" type="xs:dateTime"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="file">
                <xs:sequence>
                    <xs:element minOccurs="0" name="dateFiled" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="dateWithdrawn" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="documentId" type="xs:string"/>
                    <xs:element minOccurs="0" name="documentType" type="xs:string"/>
                    <xs:element minOccurs="0" name="documentTypeCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="documentUploadStatusCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="fileName" type="xs:string"/>
                    <xs:element minOccurs="0" name="initiatingDoc" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="largeFileYn" type="xs:string"/>
                    <xs:element minOccurs="0" name="packageId" type="xs:string"/>
                    <xs:element minOccurs="0" name="packageSeqNo" type="xs:string"/>
                    <xs:element minOccurs="0" name="paymentProcessed" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="status" type="xs:string"/>
                    <xs:element minOccurs="0" name="statusCode" type="xs:string"/>
                    <xs:element minOccurs="0" name="statusDate" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="trialDivision" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="xmlDoc" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="packageRequests">
                <xs:sequence>
                    <xs:element minOccurs="0" name="accessEntitlementCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="accessPeriod" type="tns:accessPeriod"/>
                    <xs:element minOccurs="0" name="accessRequestDt" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="accessRequestId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="accessStatus" type="tns:accessStatuses"/>
                    <xs:element minOccurs="0" name="accessStatusTypeDesc" type="xs:string"/>
                    <xs:element minOccurs="0" name="accrTypeCd" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="authorizingParties" nillable="true" type="tns:authorizingPackageParty"/>
                    <xs:element minOccurs="0" name="ceisPhysicalFileId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="createdForAccountId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="createdForClientId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="entDtm" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="entUserId" type="xs:string"/>
                    <xs:element minOccurs="0" name="justinPhysId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="packageId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="requestedByAccountId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="requestedByClientId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="updDtm" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="updUserId" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="accessPeriod">
                <xs:sequence>
                    <xs:element minOccurs="0" name="accessPeriodSeqNo" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="accessRequestId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="corAcknowledgeDt" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="endDt" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="entDtm" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="entUserId" type="xs:string"/>
                    <xs:element minOccurs="0" name="expiryNotificationSentYn" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="startDt" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="updDtm" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="updUserId" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="accessStatuses">
                <xs:sequence>
                    <xs:element minOccurs="0" name="accessRequestId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="accessStatusSeqNo" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="accessStatusTypeCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="accountId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="agenId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="clientId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="commentTxt" type="xs:string"/>
                    <xs:element minOccurs="0" name="entDtm" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="entUserId" type="xs:string"/>
                    <xs:element minOccurs="0" name="paasSeqNo" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="partId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="statusDtm" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="updDtm" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="updUserId" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="packageParties">
                <xs:sequence>
                    <xs:element minOccurs="0" name="firstName" type="xs:string"/>
                    <xs:element minOccurs="0" name="organizationName" type="xs:string"/>
                    <xs:element minOccurs="0" name="partyTypeCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="partyTypeDesc" type="xs:string"/>
                    <xs:element minOccurs="0" name="roleTypeCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="roleTypeDesc" type="xs:string"/>
                    <xs:element minOccurs="0" name="secondName" type="xs:string"/>
                    <xs:element minOccurs="0" name="surname" type="xs:string"/>
                    <xs:element minOccurs="0" name="thirdName" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="packagePayments">
                <xs:sequence>
                    <xs:element minOccurs="0" name="feeExmpt" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="paymentCategory" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="processedAmt" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="serviceId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="submittedAmt" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="transactionDesc" type="xs:string"/>
                    <xs:element minOccurs="0" name="transactionDtm" type="xs:dateTime"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="rushOrderRequest">
                <xs:complexContent>
                    <xs:extension base="tns:processRequest">
                        <xs:sequence>
                            <xs:element minOccurs="0" name="item" type="tns:rushOrderRequestItem"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType abstract="true" name="processRequest">
                <xs:sequence>
                    <xs:element minOccurs="0" name="clientNotificationSentDtm" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="contactEmailTxt" type="xs:string"/>
                    <xs:element minOccurs="0" name="contactFirstGivenNm" type="xs:string"/>
                    <xs:element minOccurs="0" name="contactOrganizationNm" type="xs:string"/>
                    <xs:element minOccurs="0" name="contactPhoneNo" type="xs:string"/>
                    <xs:element minOccurs="0" name="contactSurnameNm" type="xs:string"/>
                    <xs:element minOccurs="0" name="countryCallingNo" type="xs:string"/>
                    <xs:element minOccurs="0" name="ctryId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="entDtm" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="entUserId" type="xs:string"/>
                    <xs:element minOccurs="0" name="processNotificationSentDtm" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="processRequestId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="processTypeCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="processingCommentTxt" type="xs:string"/>
                    <xs:element minOccurs="0" name="requestDt" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="updDtm" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="updUserId" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="rushOrderRequestItem">
                <xs:complexContent>
                    <xs:extension base="tns:processItem">
                        <xs:sequence>
                            <xs:element minOccurs="0" name="courtOrderDt" type="xs:dateTime"/>
                            <xs:element minOccurs="0" name="packageId" type="xs:decimal"/>
                            <xs:element minOccurs="0" name="rushFilingReasonTxt" type="xs:string"/>
                            <xs:element maxOccurs="unbounded" minOccurs="0" name="supportDocs" nillable="true" type="tns:processSupportDocument"/>
                        </xs:sequence>
                    </xs:extension>
                </xs:complexContent>
            </xs:complexType>
            <xs:complexType abstract="true" name="processItem">
                <xs:sequence>
                    <xs:element minOccurs="0" name="currentStatusCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="currentStatusDsc" type="xs:string"/>
                    <xs:element minOccurs="0" name="entDtm" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="entUserId" type="xs:string"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0" name="itemStatuses" nillable="true" type="tns:processItemStatus"/>
                    <xs:element minOccurs="0" name="processItemSeqNo" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="processItemSubtypeCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="processReasonCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="processReasonDsc" type="xs:string"/>
                    <xs:element minOccurs="0" name="processRequestId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="requesterCommentTxt" type="xs:string"/>
                    <xs:element minOccurs="0" name="updDtm" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="updUserId" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="processSupportDocument">
                <xs:sequence>
                    <xs:element minOccurs="0" name="clientFileNm" type="xs:string"/>
                    <xs:element minOccurs="0" name="entDtm" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="entUserId" type="xs:string"/>
                    <xs:element minOccurs="0" name="fileServer" type="xs:string"/>
                    <xs:element minOccurs="0" name="objectGuid" type="xs:string"/>
                    <xs:element minOccurs="0" name="processItemSeqNo" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="processRequestId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="processSupportDocSeqNo" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="tempFileName" type="xs:string"/>
                    <xs:element minOccurs="0" name="updDtm" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="updUserId" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="processItemStatus">
                <xs:sequence>
                    <xs:element minOccurs="0" name="accountId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="agenId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="clientId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="entDtm" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="entUserId" type="xs:string"/>
                    <xs:element minOccurs="0" name="paasSeqNo" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="partId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="processItemSeqNo" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="processItemStatusSeqNo" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="processRejectReasonCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="processRejectReasonDsc" type="xs:string"/>
                    <xs:element minOccurs="0" name="processRequestId" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="processStatusCd" type="xs:string"/>
                    <xs:element minOccurs="0" name="processStatusDsc" type="xs:string"/>
                    <xs:element minOccurs="0" name="statusCommentTxt" type="xs:string"/>
                    <xs:element minOccurs="0" name="systemCreatedYn" type="xs:boolean"/>
                    <xs:element minOccurs="0" name="updDtm" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="updUserId" type="xs:string"/>
                    <xs:element minOccurs="0" name="uploadedByNm" type="xs:string"/>
                    <xs:element minOccurs="0" name="uploadedByRegUserYn" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="findStatusBySearchCriteria">
                <xs:sequence>
                    <xs:element minOccurs="0" name="arg0" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="arg1" type="xs:string"/>
                    <xs:element minOccurs="0" name="arg2" type="xs:string"/>
                    <xs:element minOccurs="0" name="arg3" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="arg4" type="xs:dateTime"/>
                    <xs:element minOccurs="0" name="arg5" type="xs:string"/>
                    <xs:element minOccurs="0" name="arg6" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="arg7" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="arg8" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="arg9" type="xs:string"/>
                    <xs:element minOccurs="0" name="arg10" type="xs:string"/>
                    <xs:element minOccurs="0" name="arg11" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="arg12" type="xs:decimal"/>
                    <xs:element minOccurs="0" name="arg13" type="xs:dateTime"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="findStatusBySearchCriteriaResponse">
                <xs:sequence>
                    <xs:element minOccurs="0" name="return" type="tns:filingStatus"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="hasRegistryNotice">
                <xs:sequence>
                    <xs:element minOccurs="0" name="arg0" type="xs:decimal"/>
                </xs:sequence>
            </xs:complexType>
            <xs:complexType name="hasRegistryNoticeResponse">
                <xs:sequence>
                    <xs:element name="return" type="xs:boolean"/>
                </xs:sequence>
            </xs:complexType>
            <xs:element name="NestedEjbException" type="tns:NestedEjbException"/>
            <xs:complexType name="NestedEjbException">
                <xs:sequence>
                    <xs:element minOccurs="0" name="message" type="xs:string"/>
                </xs:sequence>
            </xs:complexType>
        </xs:schema>
    </wsdl:types>
    <wsdl:message name="hasRegistryNoticeResponse">
        <wsdl:part element="tns:hasRegistryNoticeResponse" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="findDocumentDomainRuleVaulesResponse">
        <wsdl:part element="tns:findDocumentDomainRuleVaulesResponse" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getIssueTypesResponse">
        <wsdl:part element="tns:getIssueTypesResponse" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="hasThePackagePrivilegeResponse">
        <wsdl:part element="tns:hasThePackagePrivilegeResponse" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="findDocumentDomainRuleVaules">
        <wsdl:part element="tns:findDocumentDomainRuleVaules" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getDocumentStatusTypesResponse">
        <wsdl:part element="tns:getDocumentStatusTypesResponse" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getIssueTypes">
        <wsdl:part element="tns:getIssueTypes" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="NestedEjbException">
        <wsdl:part element="tns:NestedEjbException" name="NestedEjbException"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="findParticipatingLocationsResponse">
        <wsdl:part element="tns:findParticipatingLocationsResponse" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="findParticipatingLocations">
        <wsdl:part element="tns:findParticipatingLocations" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getDocumentTypes">
        <wsdl:part element="tns:getDocumentTypes" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getBailiffsResponse">
        <wsdl:part element="tns:getBailiffsResponse" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getPackagePrivileges">
        <wsdl:part element="tns:getPackagePrivileges" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="isParticipatingClass">
        <wsdl:part element="tns:isParticipatingClass" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="isParticipatingClassResponse">
        <wsdl:part element="tns:isParticipatingClassResponse" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="findParticipatingClassResponse">
        <wsdl:part element="tns:findParticipatingClassResponse" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="findParticipatingClass">
        <wsdl:part element="tns:findParticipatingClass" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="hasRegistryNotice">
        <wsdl:part element="tns:hasRegistryNotice" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="findAllParticipatingProcessingClasses">
        <wsdl:part element="tns:findAllParticipatingProcessingClasses" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="hasThePackagePrivilege">
        <wsdl:part element="tns:hasThePackagePrivilege" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="findAuthPackagePartiesResponse">
        <wsdl:part element="tns:findAuthPackagePartiesResponse" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="findStatusByClientIdResponse">
        <wsdl:part element="tns:findStatusByClientIdResponse" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="findStatusBySearchCriteriaResponse">
        <wsdl:part element="tns:findStatusBySearchCriteriaResponse" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getPackageIdResponse">
        <wsdl:part element="tns:getPackageIdResponse" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getPackagePrivilegesResponse">
        <wsdl:part element="tns:getPackagePrivilegesResponse" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getPackageId">
        <wsdl:part element="tns:getPackageId" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getBailiffs">
        <wsdl:part element="tns:getBailiffs" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="findAuthPackageParties">
        <wsdl:part element="tns:findAuthPackageParties" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getDocumentStatusTypes">
        <wsdl:part element="tns:getDocumentStatusTypes" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="getDocumentTypesResponse">
        <wsdl:part element="tns:getDocumentTypesResponse" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="findStatusByClientId">
        <wsdl:part element="tns:findStatusByClientId" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="findAllParticipatingProcessingClassesResponse">
        <wsdl:part element="tns:findAllParticipatingProcessingClassesResponse" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:message name="findStatusBySearchCriteria">
        <wsdl:part element="tns:findStatusBySearchCriteria" name="parameters"></wsdl:part>
    </wsdl:message>
    <wsdl:portType name="FilingStatusFacadeBean">
        <wsdl:operation name="findAllParticipatingProcessingClasses">
            <wsdl:input message="tns:findAllParticipatingProcessingClasses" name="findAllParticipatingProcessingClasses"></wsdl:input>
            <wsdl:output message="tns:findAllParticipatingProcessingClassesResponse" name="findAllParticipatingProcessingClassesResponse"></wsdl:output>
            <wsdl:fault message="tns:NestedEjbException" name="NestedEjbException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="hasThePackagePrivilege">
            <wsdl:input message="tns:hasThePackagePrivilege" name="hasThePackagePrivilege"></wsdl:input>
            <wsdl:output message="tns:hasThePackagePrivilegeResponse" name="hasThePackagePrivilegeResponse"></wsdl:output>
            <wsdl:fault message="tns:NestedEjbException" name="NestedEjbException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="findDocumentDomainRuleVaules">
            <wsdl:input message="tns:findDocumentDomainRuleVaules" name="findDocumentDomainRuleVaules"></wsdl:input>
            <wsdl:output message="tns:findDocumentDomainRuleVaulesResponse" name="findDocumentDomainRuleVaulesResponse"></wsdl:output>
            <wsdl:fault message="tns:NestedEjbException" name="NestedEjbException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getIssueTypes">
            <wsdl:input message="tns:getIssueTypes" name="getIssueTypes"></wsdl:input>
            <wsdl:output message="tns:getIssueTypesResponse" name="getIssueTypesResponse"></wsdl:output>
            <wsdl:fault message="tns:NestedEjbException" name="NestedEjbException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="findParticipatingLocations">
            <wsdl:input message="tns:findParticipatingLocations" name="findParticipatingLocations"></wsdl:input>
            <wsdl:output message="tns:findParticipatingLocationsResponse" name="findParticipatingLocationsResponse"></wsdl:output>
            <wsdl:fault message="tns:NestedEjbException" name="NestedEjbException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getDocumentTypes">
            <wsdl:input message="tns:getDocumentTypes" name="getDocumentTypes"></wsdl:input>
            <wsdl:output message="tns:getDocumentTypesResponse" name="getDocumentTypesResponse"></wsdl:output>
            <wsdl:fault message="tns:NestedEjbException" name="NestedEjbException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getPackageId">
            <wsdl:input message="tns:getPackageId" name="getPackageId"></wsdl:input>
            <wsdl:output message="tns:getPackageIdResponse" name="getPackageIdResponse"></wsdl:output>
            <wsdl:fault message="tns:NestedEjbException" name="NestedEjbException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getBailiffs">
            <wsdl:input message="tns:getBailiffs" name="getBailiffs"></wsdl:input>
            <wsdl:output message="tns:getBailiffsResponse" name="getBailiffsResponse"></wsdl:output>
            <wsdl:fault message="tns:NestedEjbException" name="NestedEjbException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getPackagePrivileges">
            <wsdl:input message="tns:getPackagePrivileges" name="getPackagePrivileges"></wsdl:input>
            <wsdl:output message="tns:getPackagePrivilegesResponse" name="getPackagePrivilegesResponse"></wsdl:output>
            <wsdl:fault message="tns:NestedEjbException" name="NestedEjbException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isParticipatingClass">
            <wsdl:input message="tns:isParticipatingClass" name="isParticipatingClass"></wsdl:input>
            <wsdl:output message="tns:isParticipatingClassResponse" name="isParticipatingClassResponse"></wsdl:output>
            <wsdl:fault message="tns:NestedEjbException" name="NestedEjbException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="findAuthPackageParties">
            <wsdl:input message="tns:findAuthPackageParties" name="findAuthPackageParties"></wsdl:input>
            <wsdl:output message="tns:findAuthPackagePartiesResponse" name="findAuthPackagePartiesResponse"></wsdl:output>
            <wsdl:fault message="tns:NestedEjbException" name="NestedEjbException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="findParticipatingClass">
            <wsdl:input message="tns:findParticipatingClass" name="findParticipatingClass"></wsdl:input>
            <wsdl:output message="tns:findParticipatingClassResponse" name="findParticipatingClassResponse"></wsdl:output>
            <wsdl:fault message="tns:NestedEjbException" name="NestedEjbException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getDocumentStatusTypes">
            <wsdl:input message="tns:getDocumentStatusTypes" name="getDocumentStatusTypes"></wsdl:input>
            <wsdl:output message="tns:getDocumentStatusTypesResponse" name="getDocumentStatusTypesResponse"></wsdl:output>
            <wsdl:fault message="tns:NestedEjbException" name="NestedEjbException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="findStatusByClientId">
            <wsdl:input message="tns:findStatusByClientId" name="findStatusByClientId"></wsdl:input>
            <wsdl:output message="tns:findStatusByClientIdResponse" name="findStatusByClientIdResponse"></wsdl:output>
            <wsdl:fault message="tns:NestedEjbException" name="NestedEjbException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="findStatusBySearchCriteria">
            <wsdl:input message="tns:findStatusBySearchCriteria" name="findStatusBySearchCriteria"></wsdl:input>
            <wsdl:output message="tns:findStatusBySearchCriteriaResponse" name="findStatusBySearchCriteriaResponse"></wsdl:output>
            <wsdl:fault message="tns:NestedEjbException" name="NestedEjbException"></wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="hasRegistryNotice">
            <wsdl:input message="tns:hasRegistryNotice" name="hasRegistryNotice"></wsdl:input>
            <wsdl:output message="tns:hasRegistryNoticeResponse" name="hasRegistryNoticeResponse"></wsdl:output>
            <wsdl:fault message="tns:NestedEjbException" name="NestedEjbException"></wsdl:fault>
        </wsdl:operation>
    </wsdl:portType>
    <wsdl:binding name="FilingStatusFacadeSoapBinding" type="tns:FilingStatusFacadeBean">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <wsdl:operation name="findAllParticipatingProcessingClasses">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="findAllParticipatingProcessingClasses">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="findAllParticipatingProcessingClassesResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="NestedEjbException">
                <soap:fault name="NestedEjbException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="hasThePackagePrivilege">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="hasThePackagePrivilege">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="hasThePackagePrivilegeResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="NestedEjbException">
                <soap:fault name="NestedEjbException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="findDocumentDomainRuleVaules">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="findDocumentDomainRuleVaules">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="findDocumentDomainRuleVaulesResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="NestedEjbException">
                <soap:fault name="NestedEjbException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getIssueTypes">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getIssueTypes">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getIssueTypesResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="NestedEjbException">
                <soap:fault name="NestedEjbException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="findParticipatingLocations">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="findParticipatingLocations">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="findParticipatingLocationsResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="NestedEjbException">
                <soap:fault name="NestedEjbException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getDocumentTypes">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getDocumentTypes">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getDocumentTypesResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="NestedEjbException">
                <soap:fault name="NestedEjbException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getPackageId">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getPackageId">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getPackageIdResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="NestedEjbException">
                <soap:fault name="NestedEjbException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getBailiffs">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getBailiffs">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getBailiffsResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="NestedEjbException">
                <soap:fault name="NestedEjbException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getPackagePrivileges">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getPackagePrivileges">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getPackagePrivilegesResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="NestedEjbException">
                <soap:fault name="NestedEjbException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="isParticipatingClass">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="isParticipatingClass">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="isParticipatingClassResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="NestedEjbException">
                <soap:fault name="NestedEjbException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="findAuthPackageParties">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="findAuthPackageParties">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="findAuthPackagePartiesResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="NestedEjbException">
                <soap:fault name="NestedEjbException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="findParticipatingClass">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="findParticipatingClass">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="findParticipatingClassResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="NestedEjbException">
                <soap:fault name="NestedEjbException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="getDocumentStatusTypes">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="getDocumentStatusTypes">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="getDocumentStatusTypesResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="NestedEjbException">
                <soap:fault name="NestedEjbException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="findStatusByClientId">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="findStatusByClientId">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="findStatusByClientIdResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="NestedEjbException">
                <soap:fault name="NestedEjbException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="findStatusBySearchCriteria">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="findStatusBySearchCriteria">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="findStatusBySearchCriteriaResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="NestedEjbException">
                <soap:fault name="NestedEjbException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
        <wsdl:operation name="hasRegistryNotice">
            <soap:operation soapAction="" style="document"/>
            <wsdl:input name="hasRegistryNotice">
                <soap:body use="literal"/>
            </wsdl:input>
            <wsdl:output name="hasRegistryNoticeResponse">
                <soap:body use="literal"/>
            </wsdl:output>
            <wsdl:fault name="NestedEjbException">
                <soap:fault name="NestedEjbException" use="literal"/>
            </wsdl:fault>
        </wsdl:operation>
    </wsdl:binding>
    <wsdl:service name="FilingStatusFacade">
        <wsdl:port binding="tns:FilingStatusFacadeSoapBinding" name="FilingStatusFacadeBeanPort">
            <soap:address location="http://localhost:11530/csows/FilingStatusFacade"/>
        </wsdl:port>
    </wsdl:service>
</wsdl:definitions>
