openapi: 3.0.0
info:
  version: 0.7.0
  title: jag-reviewer-api
  description: Efiling AI Reviewer api
servers:
  - url: "http://localhost:8090"
tags:
  - name: document
    description: Endpoints exposed to review document
  - name: admin
    description: Endpoints to admin efiling reviewer api
paths:
  "/documents/extract":
    post:
      summary: Extract document form data
      operationId: ExtractDocumentFormData
      tags:
        - document
      parameters:
        - $ref: "#/components/parameters/xTransactionId"
        - $ref: "#/components/parameters/xDocumentType"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: Document Form Data successfully extracted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentExtractResponse"
        "400":
          description: Request is not valid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiError"
  "/documents/event":
    post:
      summary: to inform api on a document event
      operationId: DocumentEvent
      tags:
        - document
      parameters:
        - $ref: "#/components/parameters/xTransactionId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DocumentEvent"
      responses:
        "204":
          description: Document Event acknoledged
  "/documents/processed/{documentId}":
    get:
      summary: to inform api on a document event
      operationId: DocumentProcessed
      tags:
        - document
      parameters:
        - $ref: "#/components/parameters/xTransactionId"
        - in: path
          name: documentId
          required: true
          schema:
            type: number
      responses:
        "200":
          description: Processed Document Returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessedDocument"

  "/documentTypeConfigurations":
    get:
      summary: list all the document configuration
      operationId: GetDocumentConfigurations
      tags:
        - admin
      parameters:
        - in: query
          name: documentType
          schema:
            type: string
          description: the document type code
      responses:
        "200":
          description: a list of document configuration
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentTypeConfigurationList"
    post:
      summary: create a new document configuration
      operationId: createDocumentTypeConfiguration
      tags:
        - admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DocumentTypeConfigurationRequest"
      responses:
        "201":
          description: document type configuration created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentTypeConfiguration"
    put:
      summary: update a document type
      operationId: updateDocumentType
      tags:
        - admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DocumentTypeConfiguration"
      responses:
        "200":
          description: document type updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentTypeConfiguration"
  "/restrictedDocumentTypes":
    get:
      summary: list all the non accepted document types
      operationId: GetRestrictedDocumentTypes
      tags:
        - adminUnaccepted
      responses:
        "200":
          description: a list of the non accepted document types
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestrictedDocumentTypeList"
    post:
      summary: create a unaccepted document types
      operationId: createRestrictedDocumentType
      tags:
        - adminUnaccepted
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DocumentType"
      responses:
        "201":
          description: document type created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestrictedDocumentType"
    put:
      summary: update a unaccepted document type
      operationId: updateRestrictedDocumentType
      tags:
        - adminUnaccepted
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RestrictedDocumentType"
      responses:
        "200":
          description: unaccepted document type updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestrictedDocumentType"
  "/restrictedDocumentTypes/{id}":
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: get a single unaccepted document type
      operationId: GetRestrictedDocumentType
      tags:
        - adminUnaccepted
      responses:
        "200":
          description: unaccepted document found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestrictedDocumentType'
    delete:
      summary: list all the non accepted document types
      operationId: DeleteRestrictedDocumentType
      tags:
        - adminUnaccepted
      responses:
        "204":
          description: unaccepted document removed
        "404":
          description: unaccepted document not found

components:
  parameters:
    xTransactionId:
      name: X-Transaction-Id
      in: header
      required: true
      description: A unique Transaction Id generated by AI Reviewer clients
      schema:
        type: string
        format: uuid
    xDocumentType:
      name: X-Document-Type
      in: header
      description: A document type
      required: true
      schema:
        type: string
  schemas:
    ApiError:
      required:
        - error
        - message
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: array
          items:
            type: string
    Document:
      type: object
      required:
        - type
        - fileName
        - size
        - contentType
      properties:
        documentId:
          type: number
          format: integer
        type:
          type: string
        fileName:
          type: string
        size:
          type: number
          format: integer
        contentType:
          type: string
    DocumentExtractResponse:
      type: object
      description: Review upload response
      required:
        - extract
        - document
      properties:
        extract:
          $ref: "#/components/schemas/Extract"
        document:
          $ref: "#/components/schemas/Document"
    DocumentEvent:
      type: object
      properties:
        status:
          type: string
        documentId:
          type: number
          format: integer
    DocumentTypeConfigurationRequest:
      type: object
      properties:
        documentType:
          $ref: "#/components/schemas/DocumentType"
        projectId:
          type: integer
        documentConfig:
          type: object
    DocumentTypeConfiguration:
      type: object
      properties:
        id:
          type: string
          format: uuid
        documentType:
          $ref: "#/components/schemas/DocumentType"
        projectId:
          type: integer
        documentConfig:
          type: object
    DocumentTypeConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/DocumentTypeConfiguration"
    Extract:
      type: object
      required:
        - id
        - transactionId
      properties:
        id:
          type: string
          format: uuid
        transactionId:
          type: string
          format: uuid
    DocumentType:
      type: object
      properties:
        type:
          type: string
        description:
          type: string
    RestrictedDocumentType:
      type: object
      properties:
        id:
          type: string
          format: uuid
        documentType:
          $ref: "#/components/schemas/DocumentType"
    RestrictedDocumentTypeList:
      type: array
      items:
        $ref: "#/components/schemas/RestrictedDocumentType"
    ProcessedDocument:
      type: object
      properties:
        extract:
          $ref: "#/components/schemas/Extract"
        document:
          $ref: "#/components/schemas/Document"
        validation:
          type: array
          items:
            type: object
        result:
          type: object

